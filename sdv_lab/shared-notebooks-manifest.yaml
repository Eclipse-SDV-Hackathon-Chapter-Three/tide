apiVersion: v0.1
workloads:
  mqtt_broker:
    runtime: podman
    agent: agent_A
    restartPolicy: NEVER
    configs:
      mqtt_conf: mqtt_config
    files:
      - mountPoint: /mosquitto/config/mosquitto.conf
        data: "{{mqtt_conf}}"
    runtimeConfig: |
      image: docker.io/library/eclipse-mosquitto:latest
      commandOptions: ["--network", "host", "-u", "mosquitto", "-v", "mosquitto_data:/mosquitto/data"]
  ustreamer:
    runtime: podman
    agent: agent_A
    restartPolicy: NEVER
    dependencies:
      mqtt_broker: ADD_COND_RUNNING
    configs:
      ustreamer_config: ustreamer_config
    files:
      - mountPoint: /app/config/CONFIG.json5
        data: "{{ustreamer_config.config}}"
      - mountPoint: /app/config/MQTT_CONFIG.json5
        data: "{{ustreamer_config.mqtt_config}}"
      - mountPoint: /app/config/ZENOH_CONFIG.json5
        data: "{{ustreamer_config.zenoh_config}}"
      - mountPoint: /app/config/subscription_data.json
        data: "{{ustreamer_config.subscription_data}}"
    runtimeConfig: |
      image: ghcr.io/eclipse-uprotocol/up-streamer-rust/configurable-streamer:main
      commandOptions: ["--network", "host", "-e", "RUST_LOG=debug,zenoh=debug"]
configs:
  mqtt_config: |
    allow_anonymous true
    listener 1883 0.0.0.0
    persistence true
    persistence_location /mosquitto/data/
  ustreamer_config:
    config: |
      {
          up_streamer_config: {
            // The message queue size of each route between endpoints within the UStreamer
            // Lower numbers mean that some messages will be dropped
            message_queue_size: 10000
          },
          streamer_uuri: {
            // Determines the authority_name of the host device
            // Used when initializing host transport
            authority: "streamer",
            // Determines the ue_id of the streamer
            // Used when initializing host transport
            ue_id: 78,
            // Determines the ue_version_major of the streamer
            // Used when initializing host transport
            ue_version_major: 1
          },
          usubscription_config: {
            // Lists the path to the subscription file when using static file
            file_path: "config/subscription_data.json"
          },
          transports: {
              zenoh: {
                  // Path to the zenoh config file
                  config_file: "config/ZENOH_CONFIG.json5",
                  // List of endpoints that use the zenoh transport
                  endpoints: [
                      {
                          // Authority of the entity that the endpoint represents
                          authority: "carla",
                          // Identifier of the endpoint
                          endpoint: "carla_endpoint",
                          // List of identifiers of all other endpoints that messages should be forwarded to
                          forwarding: [
                              "hpc_endpoint"
                          ]
                      },
                      {
                          authority: "hpc",
                          // Make sure that each endpoint has a unique identifier or the streamer will not start
                          endpoint: "hpc_endpoint",
                          // All endpoint identifiers listed here must also be defined in this config
                          forwarding: [
                              "carla_endpoint",
                          ]
                      }
                  ]
              },
              mqtt: {
                  // Same as for the zenoh section but for all MQTT5 based endpoints
                  config_file: "config/MQTT_CONFIG.json5",
                  endpoints: [
                      {
                          authority: "threadx",
                          endpoint: "threadx_endpoint",
                          forwarding: [
                              "carla_endpoint",
                              "hpc_endpoint"
                          ]
                      },
                  ]
              },
          }
      }
    mqtt_config: |
      {
        hostname: "127.0.0.1",
        port: 1883,
        max_buffered_messages: 100,
        max_subscriptions: 100,
        session_expiry_interval: 3600,
        username: "user"
      }
    zenoh_config: |
      {
        mode: "router",
        connect: {
          endpoints: ["tcp/0.0.0.0:7447"],
        },
        scouting: {
          multicast: {
            enabled: false,
          },
            gossip: {
              enabled: true,
            },
          },
        routing: {
          router: {
            peers_failover_brokering: true,
          },
          peer: {
            mode: "peer_to_peer",
          },
        },
      }
    subscription_data: |
      {
        "//threadx/000A/2/8001": ["//carla/000A/2/1234", "//hpc/000A/2/1234"],
        "//carla/000A/2/8001": ["//hpc/000A/2/1234"],
        "//hpc/000A/2/8001": ["//carla/000A/2/1234"]
      }