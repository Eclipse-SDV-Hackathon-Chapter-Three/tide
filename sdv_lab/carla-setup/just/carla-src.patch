diff --git a/Util/BuildTools/Setup.sh b/Util/BuildTools/Setup.sh
index 5277db2a..4bc19086 100755
--- a/Util/BuildTools/Setup.sh
+++ b/Util/BuildTools/Setup.sh
@@ -45,13 +45,24 @@ done
 # -- Set up environment --------------------------------------------------------
 # ==============================================================================
 
+CARLA_LLVM_VERSION_MAJOR=$(cut -d'.' -f1 <<<"$(clang --version | head -n 1 | sed -r 's/^([^.]+).*$/\1/; s/^[^0-9]*([0-9]+).*$/\1/')")
+
+if [ -z "$CARLA_LLVM_VERSION_MAJOR" ] ; then
+  fatal_error "Failed to retrieve the installed version of the clang compiler."
+else
+  echo "Using clang-$CARLA_LLVM_VERSION_MAJOR as the CARLA compiler."
+fi
+
 source $(dirname "$0")/Environment.sh
 
-export CC="$UE4_ROOT/Engine/Extras/ThirdPartyNotUE/SDKs/HostLinux/Linux_x64/v17_clang-10.0.1-centos7/x86_64-unknown-linux-gnu/bin/clang"
-export CXX="$UE4_ROOT/Engine/Extras/ThirdPartyNotUE/SDKs/HostLinux/Linux_x64/v17_clang-10.0.1-centos7/x86_64-unknown-linux-gnu/bin/clang++"
-export PATH="$UE4_ROOT/Engine/Extras/ThirdPartyNotUE/SDKs/HostLinux/Linux_x64/v17_clang-10.0.1-centos7/x86_64-unknown-linux-gnu/bin:$PATH"
+command -v /usr/bin/clang++-$CARLA_LLVM_VERSION_MAJOR >/dev/null 2>&1 || {
+  echo >&2 "clang-$CARLA_LLVM_VERSION_MAJOR is required, but it's not installed.";
+  exit 1;
+}
 
-CXX_TAG=c10
+CXX_TAG=c$CARLA_LLVM_VERSION_MAJOR
+export CC=/usr/bin/clang-$CARLA_LLVM_VERSION_MAJOR
+export CXX=/usr/bin/clang++-$CARLA_LLVM_VERSION_MAJOR
 
 # Convert comma-separated string to array of unique elements.
 IFS="," read -r -a PY_VERSION_LIST <<< "${PY_VERSION_LIST}"
@@ -59,9 +70,53 @@ IFS="," read -r -a PY_VERSION_LIST <<< "${PY_VERSION_LIST}"
 mkdir -p ${CARLA_BUILD_FOLDER}
 pushd ${CARLA_BUILD_FOLDER} >/dev/null
 
-LLVM_INCLUDE="$UE4_ROOT/Engine/Source/ThirdParty/Linux/LibCxx/include/c++/v1"
-LLVM_LIBPATH="$UE4_ROOT/Engine/Source/ThirdParty/Linux/LibCxx/lib/Linux/x86_64-unknown-linux-gnu"
-UNREAL_HOSTED_CFLAGS="--sysroot=$UE4_ROOT/Engine/Extras/ThirdPartyNotUE/SDKs/HostLinux/Linux_x64/v17_clang-10.0.1-centos7/x86_64-unknown-linux-gnu/"
+# ==============================================================================
+# -- Get and compile libc++ ----------------------------------------------------
+# ==============================================================================
+
+LLVM_BASENAME=llvm-8.0
+
+LLVM_INCLUDE=${PWD}/${LLVM_BASENAME}-install/include/c++/v1
+LLVM_LIBPATH=${PWD}/${LLVM_BASENAME}-install/lib
+
+if [[ -d "${LLVM_BASENAME}-install" ]] ; then
+  log "${LLVM_BASENAME} already installed."
+else
+  rm -Rf ${LLVM_BASENAME}-source ${LLVM_BASENAME}-build
+
+  log "Retrieving libc++."
+
+  # TODO URGENT: These links are out of date! LLVM has moved to https://github.com/llvm/llvm-project.
+  git clone --depth=1 -b release_80  https://github.com/llvm-mirror/llvm.git ${LLVM_BASENAME}-source
+  git clone --depth=1 -b release_80  https://github.com/llvm-mirror/libcxx.git ${LLVM_BASENAME}-source/projects/libcxx
+  git clone --depth=1 -b release_80  https://github.com/llvm-mirror/libcxxabi.git ${LLVM_BASENAME}-source/projects/libcxxabi
+
+  log "Compiling libc++."
+
+  mkdir -p ${LLVM_BASENAME}-build
+
+  pushd ${LLVM_BASENAME}-build >/dev/null
+
+  cmake -G "Ninja" \
+      -DLIBCXX_ENABLE_EXPERIMENTAL_LIBRARY=OFF \
+      -DLIBCXX_INSTALL_EXPERIMENTAL_LIBRARY=OFF \
+      -DLLVM_ENABLE_EH=OFF \
+      -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX="../${LLVM_BASENAME}-install" \
+      ../${LLVM_BASENAME}-source
+
+  ninja cxx
+
+  ninja install-libcxx
+
+  ninja install-libcxxabi
+
+  popd >/dev/null
+
+  rm -Rf ${LLVM_BASENAME}-source ${LLVM_BASENAME}-build
+
+fi
+
+unset LLVM_BASENAME
 
 # ==============================================================================
 # -- Get boost includes --------------------------------------------------------
@@ -91,7 +146,7 @@ for PY_VERSION in ${PY_VERSION_LIST[@]} ; do
     BOOST_PACKAGE_BASENAME=boost_${BOOST_VERSION//./_}
 
     log "Retrieving boost."
-    wget "https://boostorg.jfrog.io/artifactory/main/release/${BOOST_VERSION}/source/${BOOST_PACKAGE_BASENAME}.tar.gz" || true
+    wget https://sourceforge.net/projects/boost/files/boost/${BOOST_VERSION}/${BOOST_PACKAGE_BASENAME}.tar.gz/download -O ${BOOST_PACKAGE_BASENAME}.tar.gz || true
     # try to use the backup boost we have in Jenkins
     if [[ ! -f "${BOOST_PACKAGE_BASENAME}.tar.gz" ]] ; then
       log "Using boost backup"
@@ -105,7 +160,7 @@ for PY_VERSION in ${PY_VERSION_LIST[@]} ; do
 
     pushd ${BOOST_BASENAME}-source >/dev/null
 
-    BOOST_TOOLSET="clang-10.0"
+    BOOST_TOOLSET="clang-$CARLA_LLVM_VERSION_MAJOR.0"
     BOOST_CFLAGS="-fPIC -std=c++14 -DBOOST_ERROR_CODE_HEADER_ONLY"
 
     py3="/usr/bin/env python${PY_VERSION}"
